---
http_interactions:
- request:
    method: get
    uri: https://www.pivotaltracker.com/services/v5/projects/2121054
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby/2.5.0 (x86_64-darwin17; ruby) TrackerApi/1.8.0 Faraday/0.12.2
      X-Trackertoken:
      - "<PIVOTAL_SECRET_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Credentials:
      - 'false'
      Access-Control-Allow-Headers:
      - X-TrackerToken,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Tracker-Warn-Unless-Project-Version-Is
      Access-Control-Allow-Methods:
      - GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 20 Feb 2018 13:50:13 GMT
      Etag:
      - '"5eec137779d27b98a37ac55e1ce5743f"'
      Server:
      - nginx + Phusion Passenger
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      X-Powered-By:
      - Phusion Passenger Enterprise
      X-Rack-Cache:
      - miss
      X-Request-Id:
      - 3a64bd3032ae16bb3a3570450a15fc3e
      X-Runtime:
      - '0.057102'
      X-Tracker-Client-Pinger-Interval:
      - '20'
      X-Tracker-Project-Version:
      - '2639'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Vcap-Request-Id:
      - dc4312b1-d1cd-4bd9-6035-66e3fd304972
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '765'
      Via:
      - 1.1 google
      Alt-Svc:
      - clear
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJpZCI6MjEyMTA1NCwia2luZCI6InByb2plY3QiLCJuYW1lIjoiRMOpdmVsb3BwZW1lbnQgS2V5YmFiIiwidmVyc2lvbiI6MjYzOSwiaXRlcmF0aW9uX2xlbmd0aCI6Miwid2Vla19zdGFydF9kYXkiOiJUdWVzZGF5IiwicG9pbnRfc2NhbGUiOiIwLDEsMiwzLDUsOCIsInBvaW50X3NjYWxlX2lzX2N1c3RvbSI6ZmFsc2UsImJ1Z3NfYW5kX2Nob3Jlc19hcmVfZXN0aW1hdGFibGUiOmZhbHNlLCJhdXRvbWF0aWNfcGxhbm5pbmciOmZhbHNlLCJlbmFibGVfdGFza3MiOnRydWUsInRpbWVfem9uZSI6eyJraW5kIjoidGltZV96b25lIiwib2xzb25fbmFtZSI6IkV1cm9wZS9BbXN0ZXJkYW0iLCJvZmZzZXQiOiIrMDE6MDAifSwidmVsb2NpdHlfYXZlcmFnZWRfb3ZlciI6MywibnVtYmVyX29mX2RvbmVfaXRlcmF0aW9uc190b19zaG93IjoxMiwiaGFzX2dvb2dsZV9kb21haW4iOmZhbHNlLCJlbmFibGVfaW5jb21pbmdfZW1haWxzIjp0cnVlLCJpbml0aWFsX3ZlbG9jaXR5Ijo1MCwicHVibGljIjpmYWxzZSwiYXRvbV9lbmFibGVkIjpmYWxzZSwicHJvamVjdF90eXBlIjoicHJpdmF0ZSIsInN0YXJ0X2RhdGUiOiIyMDE3LTEwLTMxIiwic3RhcnRfdGltZSI6IjIwMTctMTAtMzBUMjM6MDA6MDBaIiwiY3JlYXRlZF9hdCI6IjIwMTctMTAtMTlUMDc6MzE6MzNaIiwidXBkYXRlZF9hdCI6IjIwMTctMTEtMTdUMTM6NDE6NTVaIiwiYWNjb3VudF9pZCI6NTkzMzc2LCJjdXJyZW50X2l0ZXJhdGlvbl9udW1iZXIiOjksImVuYWJsZV9mb2xsb3dpbmciOnRydWV9
    http_version: 
  recorded_at: Tue, 20 Feb 2018 13:50:19 GMT
- request:
    method: get
    uri: https://www.pivotaltracker.com/services/v5/projects/2121054/stories
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby/2.5.0 (x86_64-darwin17; ruby) TrackerApi/1.8.0 Faraday/0.12.2
      X-Trackertoken:
      - "<PIVOTAL_SECRET_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Credentials:
      - 'false'
      Access-Control-Allow-Headers:
      - X-TrackerToken,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Tracker-Warn-Unless-Project-Version-Is
      Access-Control-Allow-Methods:
      - GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 20 Feb 2018 13:50:13 GMT
      Etag:
      - '"828edf599d670c7f92bfc2275437ac2c"'
      Server:
      - nginx + Phusion Passenger
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      X-Powered-By:
      - Phusion Passenger Enterprise
      X-Rack-Cache:
      - miss
      X-Request-Id:
      - ac4f7329746ad7ea503c8b81c8e3dc76
      X-Runtime:
      - '0.042674'
      X-Tracker-Client-Pinger-Interval:
      - '20'
      X-Tracker-Pagination-Limit:
      - '100'
      X-Tracker-Pagination-Offset:
      - '0'
      X-Tracker-Pagination-Returned:
      - '100'
      X-Tracker-Pagination-Total:
      - '197'
      X-Tracker-Project-Version:
      - '2639'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Vcap-Request-Id:
      - b48197f3-4674-4b6b-5cce-e6c7486d38a3
      X-Xss-Protection:
      - 1; mode=block
      Via:
      - 1.1 google
      Alt-Svc:
      - clear
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 20 Feb 2018 13:50:20 GMT
- request:
    method: get
    uri: https://www.pivotaltracker.com/services/v5/projects/2121054/stories?limit=100&offset=100
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby/2.5.0 (x86_64-darwin17; ruby) TrackerApi/1.8.0 Faraday/0.12.2
      X-Trackertoken:
      - "<PIVOTAL_SECRET_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Credentials:
      - 'false'
      Access-Control-Allow-Headers:
      - X-TrackerToken,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Tracker-Warn-Unless-Project-Version-Is
      Access-Control-Allow-Methods:
      - GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 20 Feb 2018 13:50:14 GMT
      Etag:
      - '"da7f2194d2d1fc74ed525a044c8df937"'
      Server:
      - nginx + Phusion Passenger
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      X-Powered-By:
      - Phusion Passenger Enterprise
      X-Rack-Cache:
      - miss
      X-Request-Id:
      - 7de472cfd0cac6b508e3eedfb28450eb
      X-Runtime:
      - '0.051302'
      X-Tracker-Client-Pinger-Interval:
      - '20'
      X-Tracker-Pagination-Limit:
      - '100'
      X-Tracker-Pagination-Offset:
      - '100'
      X-Tracker-Pagination-Returned:
      - '97'
      X-Tracker-Pagination-Total:
      - '197'
      X-Tracker-Project-Version:
      - '2639'
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Vcap-Request-Id:
      - 70cae70b-c06a-4159-747f-82aa6f655a9b
      X-Xss-Protection:
      - 1; mode=block
      Via:
      - 1.1 google
      Alt-Svc:
      - clear
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 20 Feb 2018 13:50:20 GMT
recorded_with: VCR 4.0.0
